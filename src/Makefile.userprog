# -*- makefile -*-

include $(SRCDIR)/Make.config

SHELL = /bin/sh

VPATH = $(SRCDIR)

DEFINES = -DUSER
CPPFLAGS = -nostdinc -I$(SRCDIR) -I- -I$(SRCDIR)/lib -I$(SRCDIR)/lib/user

# Linker flags.
LDFLAGS = -nostdlib -static -s
LDLIBS = $(shell $(CC) -print-libgcc-file-name)

# C library sources linked into every test program.
LIB_SRC  = lib/debug.c			# Debug code.
LIB_SRC += lib/random.c			# Pseudo-random numbers.
LIB_SRC += lib/stdio.c			# I/O library.
LIB_SRC += lib/stdlib.c			# atoi()
LIB_SRC += lib/string.c			# String functions.
LIB_SRC += lib/user/syscall.c		# System calls.
LIB_SRC += lib/user/syscall-stub.S	# System call stub.
LIB_SRC += lib/user/console.c		# Console code.

LIB_OBJ = $(patsubst %.c,%.o,$(patsubst %.S,%.o,$(LIB_SRC)))
LIB_DEP = $(patsubst %.o,%.d,$(LIB_OBJ))
LIB = lib/user/entry.o libc.a

PROGS_SRC = $(foreach prog,$(PROGS),$($(prog)_SRC))
PROGS_OBJ = $(patsubst %.c,%.o,$(patsubst %.S,%.o,$(PROGS_SRC)))
PROGS_DEP = $(patsubst %.o,%.d,$(PROGS_OBJ))

all: $(PROGS)

define TEMPLATE
$(1)_OBJ = $(patsubst %.c,%.o,$(patsubst %.S,%.o,$($(1)_SRC)))
$(1): $$($(1)_OBJ) $$(LIB)
endef

$(foreach prog,$(PROGS),$(eval $(call TEMPLATE,$(prog))))

$(PROGS): $(LIB)

libc.a: $(LIB_OBJ)
	rm -f $@
	ar r $@ $^
	ranlib $@

clean::
	rm -f $(PROGS) $(PROGS_OBJ) $(PROGS_DEP)
	rm -f $(LIB_DEP) $(LIB_OBJ) lib/user/entry.[do] libc.a

.PHONY: all clean

-include $(LIB_DEP) $(PROGS_DEP)
