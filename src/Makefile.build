# -*- makefile -*-

include ../Make.vars
include ../../Make.config

VPATH = ../..

# Compiler and assembler options.
DEFINES += -DKERNEL
CPPFLAGS = -nostdinc -I../.. -I- -I../../lib -I../../lib/kernel	\
	   -include constants.h

# Core kernel.
threads_SRC  = threads/init.c		# Main program.
threads_SRC += threads/thread.c		# Thread management core.
threads_SRC += threads/switch.S		# Thread switch routine.
threads_SRC += threads/interrupt.c	# Interrupt core.
threads_SRC += threads/intr-stubs.S	# Interrupt stubs.
threads_SRC += threads/synch.c		# Synchronization.
threads_SRC += threads/palloc.c		# Page allocator.
threads_SRC += threads/malloc.c		# Subpage allocator.
threads_SRC += threads/start.S		# Startup code.
threads_SRC += threads/test.c		# Test code.

# Device driver code.
devices_SRC  = devices/timer.c		# Timer device.
devices_SRC += devices/kbd.c		# Keyboard device.
devices_SRC += devices/vga.c		# Video device.
devices_SRC += devices/serial.c		# Serial port device.
devices_SRC += devices/disk.c		# IDE disk device.
devices_SRC += devices/intq.c		# Interrupt queue.

# Library code shared between kernel and user programs.
lib_SRC  = lib/debug.c		# Debug helpers.
lib_SRC += lib/random.c		# Pseudo-random numbers.
lib_SRC += lib/stdio.c		# I/O library.
lib_SRC += lib/stdlib.c		# Utility functions.
lib_SRC += lib/string.c		# String functions.

# Kernel-specific library code.
lib_kernel_SRC += lib/kernel/list.c	# Doubly-linked lists.
lib_kernel_SRC += lib/kernel/bitmap.c	# Bitmaps.
lib_kernel_SRC += lib/kernel/hash.c	# Hash tables.
lib_kernel_SRC += lib/kernel/console.c	# printf(), putchar().

# User process code.
userprog_SRC  = userprog/process.c	# Process loading.
userprog_SRC += userprog/pagedir.c	# Page directories.
userprog_SRC += userprog/exception.c	# User exception handler.
userprog_SRC += userprog/syscall.c	# System call handler.
userprog_SRC += userprog/gdt.c		# GDT initialization.
userprog_SRC += userprog/tss.c		# TSS management.

# No virtual memory code yet.
#vm_SRC = vm/filename.c			# Some file.

# Filesystem code.
filesys_SRC  = filesys/filesys.c	# Filesystem core.
filesys_SRC += filesys/file.c		# Files.
filesys_SRC += filesys/directory.c	# Directories.
filesys_SRC += filesys/inode.c		# File headers.
filesys_SRC += filesys/fsutil.c		# Utilities.

SOURCES = $(foreach dir,$(SUBDIRS),$($(subst /,_,$(dir))_SRC))
OBJECTS = $(patsubst %.c,%.o,$(patsubst %.S,%.o,$(SOURCES)))
DEPENDS = $(patsubst %.o,%.d,$(OBJECTS))

all: os.dsk

threads/intr-stubs.S: threads/intr-stubs.pl threads/loader.h
	$< > $@

threads/kernel.lds.s: CPPFLAGS += -P
threads/kernel.lds.s: threads/kernel.lds.S threads/loader.h

kernel.o: threads/kernel.lds.s $(OBJECTS)
	$(LD) -T $< -o $@ $(OBJECTS) `$(CC) -print-libgcc-file-name`

kernel.bin: kernel.o
	$(OBJCOPY) -O binary -R .note -R .comment -S $< $@.tmp
	$(DD) if=$@.tmp of=$@ bs=4096 conv=sync
	$(RM) $@.tmp

threads/loader.o: threads/loader.S kernel.bin
	$(CC) -c $< -o $@ $(ASFLAGS) $(CPPFLAGS) $(DEFINES) -DKERNEL_LOAD_PAGES=`perl -e 'print +(-s "kernel.bin") / 4096;'`

loader.bin: threads/loader.o
	$(LD) -N -e start -Ttext 0x7c00 --oformat binary -o $@ $<

os.dsk: loader.bin kernel.bin
	$(CAT) $^ > $@

clean:
	$(RM) -f $(OBJECTS) $(DEPENDS)
	$(RM) -f threads/intr-stubs.S threads/loader.o
	$(RM) -f kernel.o kernel.lds.s
	$(RM) -f kernel.bin loader.bin

Makefile: ../../Makefile.build
	cp $< $@

-include $(DEPENDS)
